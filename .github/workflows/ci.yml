name: Shell Script CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Kiểm tra mã nguồn của repo
      - name: Check out code
        uses: actions/checkout@v2

      # Cài đặt shellcheck để kiểm tra lỗi shell script
      - name: Set up shellcheck
        run: sudo apt-get install -y shellcheck

      # Lấy danh sách các file thay đổi trong Pull Request hoặc Push và kiểm tra file .sh
      - name: Check changed shell script files
        run: |
          # Lấy danh sách các file thay đổi trong Pull Request hoặc Push
          git fetch --prune --unshallow  # Đảm bảo có tất cả các commit trong PR
          PR_FILES=$(git diff --name-only ${{ github.event.pull_request.before }} ${{ github.event.pull_request.after }})

          # Lọc các file có đuôi .sh
          SH_FILES=$(echo "$PR_FILES" | grep '\.sh$' || true)

          # Kiểm tra nếu có file .sh thay đổi và chạy shellcheck
          if [ -n "$SH_FILES" ]; then
            for file in $SH_FILES; do
              echo "Running ShellCheck on $file"
              shellcheck "$file"
            done
          else
            echo "No shell script files changed."
          fi

      # Nếu có file .sh thay đổi, thực thi chúng với Bash
      - name: Execute changed shell scripts with Bash
        run: |
          # Lấy danh sách các file thay đổi
          git fetch --prune --unshallow  # Đảm bảo có tất cả các commit trong PR
          PR_FILES=$(git diff --name-only ${{ github.event.pull_request.before }} ${{ github.event.pull_request.after }})

          # Lọc các file có đuôi .sh
          SH_FILES=$(echo "$PR_FILES" | grep '\.sh$' || true)

          # Nếu có file .sh thay đổi, thực thi chúng
          if [ -n "$SH_FILES" ]; then
            for file in $SH_FILES; do
              echo "Executing $file with Bash"
              chmod +x "$file"   # Đảm bảo file có quyền thực thi
              bash "$file"       # Thực thi script với Bash
            done
          else
            echo "No shell script files to execute."
          fi
